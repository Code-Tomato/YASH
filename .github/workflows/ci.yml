name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up build environment
      run: |
        echo "Setting up build environment on ${{ matrix.os }}"
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          sudo apt-get update -qq
          sudo apt-get install -y build-essential gcc doxygen graphviz
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          brew install doxygen graphviz
        fi
      timeout-minutes: 10
        
    - name: Build project
      run: make clean && make all
      timeout-minutes: 5
      
    - name: Run tests
      run: make test
      timeout-minutes: 5
      
    - name: Check for memory leaks (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y valgrind
        valgrind --leak-check=full --error-exitcode=1 ./build/test/test_runner
      timeout-minutes: 15
        
    - name: Generate documentation
      run: make docs
      continue-on-error: true
      timeout-minutes: 5
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}
        path: |
          build/test/
          docs/html/
        retention-days: 7

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install clang-format
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y clang-format
      timeout-minutes: 5
        
    - name: Check code formatting
      run: |
        # Check if code is properly formatted
        make format
        if [ -n "$(git status --porcelain)" ]; then
          echo "Code formatting issues found. Please run 'make format' and commit the changes."
          git diff
          exit 1
        fi
      timeout-minutes: 5
        
    - name: Static analysis with cppcheck
      run: |
        sudo apt-get install -y cppcheck
        cppcheck --enable=all --inconclusive --std=c99 --suppress=missingIncludeSystem src/ include/
      timeout-minutes: 10
        
